@page
@model MusicLibrary.Pages.Studio.Playlists.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit Playlist</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="playlist.PlaylistID" />
            <input type="hidden" asp-for="playlist.UserName" />
            <div class="form-group">
                <label asp-for="playlist.PlaylistName" class="control-label"></label>
                <input asp-for="playlist.PlaylistName" class="form-control" />
                <span asp-validation-for="playlist.PlaylistName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="playlist.SongCount" class="control-label"></label>
                <input asp-for="playlist.SongCount" class="form-control" readonly/>
                <span asp-validation-for="playlist.SongCount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="playlist.CreateDate" class="control-label"></label>
                <input asp-for="playlist.CreateDate" class="form-control" readonly/>
                <span asp-validation-for="playlist.CreateDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PlaylistSongs[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlaylistSongs[0].UploadDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlaylistSongs[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlaylistSongs[0].Artist)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlaylistSongs[0].Length)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.PlaylistSongs) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UploadDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Artist)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Length)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-SongID="@item.SongID" asp-route-id="@Model.playlistID">Remove</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div>
    <a asp-page="./Index">Back to Playlists</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
