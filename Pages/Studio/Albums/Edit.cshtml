@page
@model MusicLibrary.Pages.Studio.Albums.EditModel
@{
}
@{
    ViewData["Title"] = "Edit";
}

<h1>Edit Album</h1>

<div class="styled-form row py-3">
    <div class="col-md-4">
        <form method="post" enctype="multipart/form-data" class="d-flex flex-column gap-3">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="album.AlbumID" />
            <input type="hidden" asp-for="album.ArtistName" />
            <div class="form-group">
                <label asp-for="album.AlbumName" class="control-label text-white"></label>
                <input asp-for="album.AlbumName" class="form-control" />
                <span asp-validation-for="album.AlbumName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="album.CreateDate" class="control-label text-white"></label>
                <input asp-for="album.CreateDate" class="form-control" readonly />
                <span asp-validation-for="album.CreateDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="album.ArtistName" class="control-label text-white"></label>
                <input asp-for="album.ArtistName" class="form-control" readonly />
                <span asp-validation-for="album.ArtistName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="album.SongCount" class="control-label text-white"></label>
                <input asp-for="album.SongCount" class="form-control" readonly />
                <span asp-validation-for="album.SongCount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary upload" />
            </div>
        </form>
    </div>
</div>

<table class="table mb-0">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.AlbumSongs[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AlbumSongs[0].UploadDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AlbumSongs[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AlbumSongs[0].Artist)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AlbumSongs[0].Length)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.AlbumSongs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UploadDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Artist)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Length)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-removeSongID="@item.SongID" asp-route-id="@Model.currentAlbumID">Remove</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<button onclick="showAllSongs()" class="btn btn-primary">Add Songs to Album</button>

<div id="allSongsDiv" style="display:none">
    <table class="table mb-0">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.AllSongs[0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AllSongs[0].UploadDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AllSongs[0].Genre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AllSongs[0].Artist)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AllSongs[0].Length)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.AllSongs)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UploadDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Genre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Artist)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Length)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-addSongID="@item.SongID" asp-route-id="@Model.currentAlbumID">Add</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>function showAllSongs() {
        var x = document.getElementById("allSongsDiv");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }</script>

<div>
    <a asp-page="./Index">Back to Albums</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}